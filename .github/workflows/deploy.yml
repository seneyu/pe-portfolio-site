name: Deploy

on:
  workflow_dispatch:
  workflow_run:
    workflows: ['Run Tests']
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: 'Deploy to VPS'
    runs-on: ubuntu-latest
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/deploy-key.pem
          chmod 600 ~/.ssh/deploy-key.pem
          cat >> ~/.ssh/config <<END
          Host my-vps
            HostName $SSH_IP
            User $SSH_USER
            IdentityFile ~/.ssh/deploy-key.pem
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_IP: ${{ secrets.SSH_IP }}

      - name: Deploy Site
        run: ssh my-vps '~/redeploy-site.sh'

      - name: Print Container Status
        run: ssh my-vps 'cd ${{ secrets.PROJECT_ROOT }} && docker compose ps'

      - name: Send Discord Notification
        run: curl -s -X POST "${{ secrets.DISCORD_WEBHOOK }}" -d "content=ðŸš€ Deployment Successful"

  notify_on_failure:
    runs-on: ubuntu-latest
    needs: deploy
    if: always()
    steps:
      - name: Send Failure Notification
        if: ${{ needs.deploy.result == 'failure' }}
        run: curl -s -X POST "${{ secrets.DISCORD_WEBHOOK }}" -d "content=ðŸš¨ Deployment Failed"
